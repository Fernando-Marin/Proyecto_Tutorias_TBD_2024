/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import controlador.AlumnoDAO;
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import modelo.Alumno;
import reportes.ReporteAlumno;

/**
 *
 * @author Dell
 */
public class VentanaAlumos extends javax.swing.JFrame {

    /**
     * Creates new form VentanaAlumo
     */
    public VentanaAlumos() {
        initComponents();
        cargarTablaAlumnos();
        this.getContentPane().setBackground(Color.darkGray);
        // pegar despues del constructor de la ventana debajo del metodo de cargar tabla alumnos

tablaAlumnos.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                // Solo ejecutamos si la selecci√≥n es de una sola fila
                if (!event.getValueIsAdjusting() && tablaAlumnos.getSelectedRow() != -1) {
                    cargarDatosFormulario(tablaAlumnos.getSelectedRow());
                }
            }
        });
    }

    private void buscarAlumnos() {
        // Obtener el texto del filtro
        String filtro = cajaFiltro.getText().trim();

        // Usar el DAO para buscar los alumnos
        AlumnoDAO alumnoDAO = new AlumnoDAO();
        tablaAlumnos.setModel(alumnoDAO.buscarAlumnos(filtro));
    }

    private void cargarTablaAlumnos() {
        AlumnoDAO alumnoDAO = new AlumnoDAO();
        tablaAlumnos.setModel(alumnoDAO.obtenerModeloTablaAlumnos());
    }
    
    
    private  void cargarTablaAuditoria(){
        AlumnoDAO alumnoDAO = new AlumnoDAO();
        tablaAlumnos.setModel(alumnoDAO.obtenerModeloTablaAuditoria());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelNumControl = new javax.swing.JLabel();
        labelNombre = new javax.swing.JLabel();
        labelPrimerAp = new javax.swing.JLabel();
        cajaNumControl = new javax.swing.JTextField();
        cajaNombre = new javax.swing.JTextField();
        cajaPrimerAp = new javax.swing.JTextField();
        cajaSegundoAp = new javax.swing.JTextField();
        labelSegundoAp = new javax.swing.JLabel();
        labelSemestre = new javax.swing.JLabel();
        labelIdUsuario = new javax.swing.JLabel();
        labelIdCarrera = new javax.swing.JLabel();
        cajaIdCarrera = new javax.swing.JSpinner();
        cajaIdUsuario = new javax.swing.JSpinner();
        botonAgregar = new javax.swing.JButton();
        cajaSemestre = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        botonEliminar = new javax.swing.JButton();
        botonModificar = new javax.swing.JButton();
        btnVerTodos = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        cajaFiltro = new javax.swing.JTextField();
        verAuditoria = new javax.swing.JButton();
        tablaAlumnosPane = new javax.swing.JScrollPane();
        tablaAlumnos = new javax.swing.JTable();
        btnReporte = new javax.swing.JButton();
        labelTitulo = new javax.swing.JLabel();
        labelBuscarAlumn = new javax.swing.JLabel();
        LabelReporte = new javax.swing.JLabel();
        labelTablas = new javax.swing.JLabel();
        labelBusqueda = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        btnAlumnos = new javax.swing.JMenu();
        btnProfesores = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelNumControl.setText("Num Control");
        getContentPane().add(labelNumControl, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 70, -1));

        labelNombre.setText("Nombre");
        getContentPane().add(labelNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 53, -1));

        labelPrimerAp.setText("Primer Ap");
        getContentPane().add(labelPrimerAp, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 68, -1));

        cajaNumControl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cajaNumControlKeyTyped(evt);
            }
        });
        getContentPane().add(cajaNumControl, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 40, 100, -1));

        cajaNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cajaNombreKeyTyped(evt);
            }
        });
        getContentPane().add(cajaNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 70, 100, -1));

        cajaPrimerAp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cajaPrimerApKeyTyped(evt);
            }
        });
        getContentPane().add(cajaPrimerAp, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 100, 100, -1));

        cajaSegundoAp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cajaSegundoApKeyTyped(evt);
            }
        });
        getContentPane().add(cajaSegundoAp, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 100, -1));

        labelSegundoAp.setText("Segundo Ap");
        getContentPane().add(labelSegundoAp, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 70, -1));

        labelSemestre.setText("Semestre");
        getContentPane().add(labelSemestre, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 200, 60, -1));

        labelIdUsuario.setText("Id Usuario");
        getContentPane().add(labelIdUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 240, 60, -1));

        labelIdCarrera.setText("Id Carrera");
        getContentPane().add(labelIdCarrera, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 66, -1));
        getContentPane().add(cajaIdCarrera, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 280, -1, -1));
        getContentPane().add(cajaIdUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, -1, -1));

        botonAgregar.setText("Agregar");
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(botonAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, 72, -1));

        cajaSemestre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleciona opcion", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));
        getContentPane().add(cajaSemestre, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, 124, -1));
        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(613, 325, 16, 140));

        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(botonEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 90, -1, -1));

        botonModificar.setText("Modificar");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });
        getContentPane().add(botonModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, -1, -1));

        btnVerTodos.setText("Ver todos");
        btnVerTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerTodosActionPerformed(evt);
            }
        });
        getContentPane().add(btnVerTodos, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 250, 100, -1));

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 120, -1, -1));

        cajaFiltro.setText("jTextField1");
        cajaFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cajaFiltroKeyTyped(evt);
            }
        });
        getContentPane().add(cajaFiltro, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, 100, -1));

        verAuditoria.setText("Ver tabla auditoria");
        verAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verAuditoriaActionPerformed(evt);
            }
        });
        getContentPane().add(verAuditoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(376, 250, 130, -1));

        tablaAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaAlumnosPane.setViewportView(tablaAlumnos);

        getContentPane().add(tablaAlumnosPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 325, 610, 200));

        btnReporte.setText("Reporte");
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });
        getContentPane().add(btnReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 250, -1, -1));

        labelTitulo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelTitulo.setText("Alumnos ITSJ");
        getContentPane().add(labelTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 120, -1));

        labelBuscarAlumn.setText("Buscar alumno");
        getContentPane().add(labelBuscarAlumn, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 50, -1, -1));

        LabelReporte.setText("Generar reporte");
        getContentPane().add(LabelReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 220, -1, -1));

        labelTablas.setText("Generar tablas");
        getContentPane().add(labelTablas, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 220, -1, -1));

        labelBusqueda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/digital-art-abstract-artwork-1368191-wallhere.com.jpg"))); // NOI18N
        getContentPane().add(labelBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 570));

        btnAlumnos.setText("Alumnos");
        jMenuBar1.add(btnAlumnos);

        btnProfesores.setText("Profesores");
        jMenuBar1.add(btnProfesores);

        jMenu1.setText("jMenu1");
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
// Obtener los datos del formulario
        Alumno alumno = obtenerDatosFormulario();

        // Validar los datos
        if (!validarDatosFormulario(alumno)) {
            return;
        }

        // Agregar el alumno a la base de datos
        if (agregarAlumnoBD(alumno)) {
            // Actualizar la tabla si se agreg√≥ correctamente
            //actualizarTabla();
            cargarTablaAlumnos();
            // Limpiar los campos del formulario
            limpiarFormulario();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_botonAgregarActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        // TODO add your handling code here:
// Obtener el n√∫mero de control de la caja de texto
        String numeroDeControl = cajaNumControl.getText().trim();

        // Validar que no est√© vac√≠o
        if (numeroDeControl.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese el n√∫mero de control del alumno.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Confirmar eliminaci√≥n
        int confirmacion = JOptionPane.showConfirmDialog(this,
                "¬øEst√° seguro de que desea eliminar al alumno con n√∫mero de control " + numeroDeControl + "?",
                "Confirmaci√≥n",
                JOptionPane.YES_NO_OPTION);

        if (confirmacion == JOptionPane.YES_OPTION) {
            // Intentar eliminar el alumno usando el DAO
            AlumnoDAO alumnoDAO = new AlumnoDAO();
            boolean eliminado = alumnoDAO.eliminarAlumno(numeroDeControl);

            if (eliminado) {
                JOptionPane.showMessageDialog(this, "Alumno eliminado correctamente.", "√âxito", JOptionPane.INFORMATION_MESSAGE);
                cargarTablaAlumnos(); // Actualizar la tabla
                limpiarFormulario(); // Limpiar los campos del formulario
            } else {
                JOptionPane.showMessageDialog(this, "No se encontr√≥ al alumno con ese n√∫mero de control.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
        // TODO add your handling code here:
        // doble click al boton modificar

// Obtener los datos del formulario
        Alumno alumno = obtenerDatosFormulario();

        // Validar los datos
        if (!validarDatosFormulario(alumno)) {
            return;
        }

        // Confirmar la modificaci√≥n
        int confirmacion = JOptionPane.showConfirmDialog(this,
                "¬øEst√° seguro de que desea modificar los datos del alumno con n√∫mero de control " + alumno.getNumeroDeControl() + "?",
                "Confirmaci√≥n",
                JOptionPane.YES_NO_OPTION);

        if (confirmacion == JOptionPane.YES_OPTION) {
            // Intentar modificar el alumno usando el DAO
            AlumnoDAO alumnoDAO = new AlumnoDAO();
            boolean modificado = alumnoDAO.modificarAlumno(alumno);

            if (modificado) {
                JOptionPane.showMessageDialog(this, "Alumno modificado correctamente.", "√âxito", JOptionPane.INFORMATION_MESSAGE);
                cargarTablaAlumnos(); // Actualizar la tabla
                limpiarFormulario(); // Limpiar los campos del formulario
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo modificar el alumno. Verifique los datos.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_botonModificarActionPerformed

    private void btnVerTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerTodosActionPerformed
        // TODO add your handling code here:
        cargarTablaAlumnos();
    }//GEN-LAST:event_btnVerTodosActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        buscarAlumnos();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void verAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verAuditoriaActionPerformed
        // TODO add your handling code here:
        cargarTablaAuditoria();
    }//GEN-LAST:event_verAuditoriaActionPerformed

    private void cajaNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cajaNombreKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();
        
        boolean mayusculas = key >= 65 && key <=90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;
        
        if(!(minusculas || mayusculas || espacio))
        {
            evt.consume();
        }
    }//GEN-LAST:event_cajaNombreKeyTyped

    private void cajaPrimerApKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cajaPrimerApKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();
        
        boolean mayusculas = key >= 65 && key <=90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;
        
        if(!(minusculas || mayusculas || espacio))
        {
            evt.consume();
        }
    }//GEN-LAST:event_cajaPrimerApKeyTyped

    private void cajaSegundoApKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cajaSegundoApKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();
        
        boolean mayusculas = key >= 65 && key <=90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;
        
        if(!(minusculas || mayusculas || espacio))
        {
            evt.consume();
        }
    }//GEN-LAST:event_cajaSegundoApKeyTyped

    private void cajaFiltroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cajaFiltroKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();
        
        boolean mayusculas = key >= 65 && key <=90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean numeros = key >= 48 && key <= 57;
        
        if(!(minusculas || mayusculas || numeros))
        {
            evt.consume();
        }
    }//GEN-LAST:event_cajaFiltroKeyTyped

    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed
        // TODO add your handling code here:
        // agregar un boton para generar reporte y en el action performance pegar

String rutaArchivo = "reporte_alumnos.csv";
        boolean exito = ReporteAlumno.generarReporteCSV(rutaArchivo);
        
        if (exito) {
            System.out.println("Reporte generado con √©xito en: " + rutaArchivo);
            
            // Intentamos abrir el archivo generado autom√°ticamente
            File archivo = new File(rutaArchivo);
            if (archivo.exists()) {
                try {
                    Desktop.getDesktop().open(archivo); // Abre el archivo con la aplicaci√≥n predeterminada
                } catch (IOException e) {
                    System.out.println("Error al abrir el archivo: " + e.getMessage());
                }
            } else {
                System.out.println("El archivo no existe.");
            }
        } else {
            System.out.println("Hubo un problema al generar el reporte.");
        }
    }//GEN-LAST:event_btnReporteActionPerformed

    private void cajaNumControlKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cajaNumControlKeyTyped
        // TODO add your handling code here:
        
         int key = evt.getKeyChar();
        
        boolean mayusculas = key >= 65 && key <=90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean numeros = key >= 48 && key <= 57;
        
        if(!(minusculas || mayusculas || numeros))
        {
            evt.consume();
        }
    }//GEN-LAST:event_cajaNumControlKeyTyped

    private void limpiarFormulario() {
        cajaNumControl.setText("");
        cajaNombre.setText("");
        cajaPrimerAp.setText("");
        cajaSegundoAp.setText("");
        cajaSemestre.setSelectedIndex(0);
        cajaIdUsuario.setValue(0);
        cajaIdCarrera.setValue(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaAlumos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaAlumos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaAlumos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaAlumos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaAlumos().setVisible(true);
            }
        });
    }

    private Alumno obtenerDatosFormulario() {
        Alumno alumno = new Alumno();

        // Obtener los valores de los campos
        alumno.setNumeroDeControl(cajaNumControl.getText().trim());
        alumno.setNombre(cajaNombre.getText().trim());
        alumno.setPrimerApellido(cajaPrimerAp.getText().trim());
        alumno.setSegundoApellido(cajaSegundoAp.getText().trim());
        alumno.setSemestre(Integer.parseInt(cajaSemestre.getSelectedItem().toString()));
        alumno.setIdUsuario((Integer) cajaIdUsuario.getValue());
        alumno.setIdCarrera((Integer) cajaIdCarrera.getValue());

        return alumno;
    }

    private boolean validarDatosFormulario(Alumno alumno) {
        if (alumno.getNumeroDeControl().isEmpty()
                || alumno.getNombre().isEmpty()
                || alumno.getPrimerApellido().isEmpty()
                || alumno.getSegundoApellido().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (alumno.getSemestre() <= 0) {
            JOptionPane.showMessageDialog(this, "El semestre debe ser mayor a 0.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (alumno.getIdUsuario() <= 0 || alumno.getIdCarrera() <= 0) {
            JOptionPane.showMessageDialog(this, "ID Usuario y ID Carrera deben ser mayores a 0.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }

    private boolean agregarAlumnoBD(Alumno alumno) {
        AlumnoDAO alumnoDAO = new AlumnoDAO();
        boolean resultado = alumnoDAO.agregarAlumno(alumno);

        if (resultado) {
            JOptionPane.showMessageDialog(this, "Alumno agregado correctamente.", "√âxito", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Error al agregar el alumno.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        return resultado;
    }
    
    
    // pegar metodo en ventanaAlumnos

private void cargarDatosFormulario(int rowIndex) {
        // Obt√©n los datos de la fila seleccionada
        String numeroDeControl = tablaAlumnos.getValueAt(rowIndex, 0).toString(); // Columna 0: N√∫mero de control
        String nombre = tablaAlumnos.getValueAt(rowIndex, 1).toString(); // Columna 1: Nombre
        String primerApellido = tablaAlumnos.getValueAt(rowIndex, 2).toString(); // Columna 2: Primer apellido
        String segundoApellido = tablaAlumnos.getValueAt(rowIndex, 3).toString(); // Columna 3: Segundo apellido
        int semestre = (int) tablaAlumnos.getValueAt(rowIndex, 4); // Columna 4: Semestre

        // Cargar los valores en los campos del formulario
        cajaNumControl.setText(numeroDeControl);
        cajaNombre.setText(nombre);
        cajaPrimerAp.setText(primerApellido);
        cajaSegundoAp.setText(segundoApellido);
        cajaSemestre.setSelectedItem(semestre);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelReporte;
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonModificar;
    private javax.swing.JMenu btnAlumnos;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JMenu btnProfesores;
    private javax.swing.JButton btnReporte;
    private javax.swing.JButton btnVerTodos;
    private javax.swing.JTextField cajaFiltro;
    private javax.swing.JSpinner cajaIdCarrera;
    private javax.swing.JSpinner cajaIdUsuario;
    private javax.swing.JTextField cajaNombre;
    private javax.swing.JTextField cajaNumControl;
    private javax.swing.JTextField cajaPrimerAp;
    private javax.swing.JTextField cajaSegundoAp;
    private javax.swing.JComboBox<String> cajaSemestre;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelBuscarAlumn;
    private javax.swing.JLabel labelBusqueda;
    private javax.swing.JLabel labelIdCarrera;
    private javax.swing.JLabel labelIdUsuario;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelNumControl;
    private javax.swing.JLabel labelPrimerAp;
    private javax.swing.JLabel labelSegundoAp;
    private javax.swing.JLabel labelSemestre;
    private javax.swing.JLabel labelTablas;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JTable tablaAlumnos;
    private javax.swing.JScrollPane tablaAlumnosPane;
    private javax.swing.JButton verAuditoria;
    // End of variables declaration//GEN-END:variables
}
